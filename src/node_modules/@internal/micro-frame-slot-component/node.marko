import { getSource } from "../../../util/stream";

$ {
  const streamSource = getSource(input.from, out);
  const stream = streamSource.slot(input.slot);
  let finishLoading;
  const loadingPromise =
    input.loading && new Promise((res) => (finishLoading = res));
}
<div id=component.id class=input.class style=input.style data-slot=input.slot data-from=input.from>
  <macro name="wait">
    <await(stream.next())
      client-reorder=input.clientReorder
      timeout=input.timeout
    >
      <@then|{ value, done }|>
        <if(!done)>
          $!{value}
          <wait/>
        </if>
        <else>
          $ finishLoading && finishLoading();
        </else>
      </@then>
      <@catch|e|>
        $ finishLoading && finishLoading();
        <script>document.getElementById(${JSON.stringify(component.id)}).textContent=""</script>
        <${input.catch}(e)/>
      </@catch>
    </await>
  </macro>
  $ out.bf("@_", component, true);
  <if(stream)>
    <if(input.loading)>
      <await(loadingPromise) placeholder=input.loading client-reorder/>
    </if>
    <wait/>
  </if>
  $ out.ef();
</div>
